#!/usr/bin/env bash

# Force the shell to immediately if a single command exits with a non-zero exit value.
set -e

# Turn on / off the debug mode
#set -x

# Load configuration
source ./common

echo -e "Current project configuration is:"
echo -e "-> Project ID      = $PROJECT_ID"
echo -e "-> Cluster Name    = $CLUSTER_NAME"
echo -e "-> Cluster Zone    = $CLUSTER_ZONE"
echo -e "-> Number Of Nodes = $NUM_NODES"
echo -e "\n"

# Activate service account by key file
echo -e "Activate service account ..."
gcloud auth activate-service-account --key-file="$ACCOUNT_KEY_FILE"

# Enable Kubernetes Engine
echo -e "\n-> Enabling Deployment Manager APIs ..."
gcloud services enable deploymentmanager.googleapis.com --project=$PROJECT_ID

# Create a new cluster
echo -e "\n-> Creating cluster '$CLUSTER_NAME' ..."
gcloud deployment-manager deployments create "$CLUSTER_NAME" \
    --quiet \
    --template=./cluster/cluster.py \
    --properties=CLUSTER_NAME:$CLUSTER_NAME,CLUSTER_ZONE:$CLUSTER_ZONE,NUM_NODES:$NUM_NODES \
    --project="$PROJECT_ID"

# Get cluster credentials
gcloud container clusters get-credentials "$CLUSTER_NAME" --zone australia-southeast1-a --project "$PROJECT_ID"

# List all clusters under project
echo -e "\n-> Listing all clusters under project '$PROJECT_ID' ..."
gcloud container clusters list \
    --project=$PROJECT_ID